// -----------------------------------------------------------------------------
// This file contains CSS helper classes.
// -----------------------------------------------------------------------------

/**
 * Clear inner floats
 */
.clearfix::after {
  clear: both;
  content: '';
  display: table;
}

/**
 * Main content containers
 * 1. Make the container full-width with a maximum width
 * 2. Center it in the viewport
 * 3. Leave some space on the edges, especially valuable on small screens
 */
.container {
  max-width: $max-width; /* 1 */
  margin-left: auto; /* 2 */
  margin-right: auto; /* 2 */
  padding-left: 20px; /* 3 */
  padding-right: 20px; /* 3 */
  width: 100%; /* 1 */
}

/**
 * Hide text while making it readable for screen readers
 * 1. Needed in WebKit-based browsers because of an implementation bug;
 *    See: https://code.google.com/p/chromium/issues/detail?id=457146
 */
.hide-text {
  overflow: hidden;
  padding: 0; /* 1 */
  text-indent: 101%;
  white-space: nowrap;
}

/**
 * Hide element while making it readable for screen readers
 * Shamelessly borrowed from HTML5Boilerplate:
 * https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css#L119-L133
 */
.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.mr-auto {
  margin-right: auto !important;
}

.bg-primary {
  background: $primary-color;
}
/* Paddings Helpers */
.p-1 {
  padding: 0.25rem;
}

.pl-4 {
  padding-left : 1.25rem;
}

/* Margins Helpers */
.mr-1 {
  margin-right: map-get($map: $margins, $key: "generic-4xs");
}

//margin top
.mt-1 {
  margin-top: map-get($map: $margins, $key: "generic-4xs");
}

.mt-2 {
  margin-top: map-get($map: $margins, $key: "generic-3xs");
}

.mt-3 {
  margin-top: map-get($map: $margins, $key: "generic-2xs");
}

.mt-4 {
  margin-top: map-get($map: $margins, $key: "generic-xs");
}

.mt-5 {
  margin-top: map-get($map: $margins, $key: "generic");
}

.mb-2{
  margin-top: map-get($map: $margins, $key: "generic-3xs");
}


.grid {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  grid-gap: 2px;
  counter-reset: div;
}

.grid div {
  text-align: center;
}

/* spanning cols, complete values missing */

.col-2 {
  grid-column: auto/span 2;
}

.col-3 {
  grid-column: auto/span 3;
}

.col-4 {
  grid-column: auto/span 4;
}

.col-5 {
  grid-column: auto/span 5;
}

.col-6 {
  grid-column: auto/span 6;
}

.col-7 {
  grid-column: auto/span 7;
}

.col-8 {
  grid-column: auto/span 8;
}

.col-9 {
  grid-column: auto/span 9;
}

.col-10 {
  grid-column: auto/span 10;
}

.col-11 {
  grid-column: auto/span 11;
}

.col-12 {
  grid-column: auto/span 12;
}

// spanning columns for
.col-md-offset-2 {
  display:none;
  @include mq(medium) {
    display: block;
    grid-column: auto/span 2;
  }
}

.col-md-offset-3 {
  display:none;
  @include mq(medium) {
    display: block;
    grid-column: auto/span 3;
  }
}

.col-md-offset-4 {
  display:none;
  @include mq(medium) {
    display: block;
    grid-column: auto/span 4;
  }
}

.col-md-offset-5 {
  display:none;
  @include mq(medium) {
    display: block;
    grid-column: auto/span 5;
  }
}

.col-md-offset-6 {
  display:none;
  @include mq(medium) {
    display: block;
    grid-column: auto/span 6;
  }
}

.col-md-offset-7 {
  display:none;
  @include mq(medium) {
    display: block;
    grid-column: auto/span 7;
  }
}

.col-md-offset-8 {
  display:none;
  @include mq(medium) {
    display: block;
    grid-column: auto/span 8;
  }
}

.col-md-offset-9 {
  display:none;
  @include mq(medium) {
    display: block;
    grid-column: auto/span 9;
  }
}

.col-md-offset-10 {
  display:none;
  @include mq(medium) {
    display: block;
    grid-column: auto/span 10;
  }
}

.col-md-offset-11 {
  display:none;
  @include mq(medium) {
    display: block;
    grid-column: auto/span 11;
  }
}

.col-md-offset-12 {
  display:none;
  @include mq(medium) {
    display: block;
    grid-column: auto/span 12;
  }
}

.col-md-2 {
  @include mq(medium) {
    grid-column: auto/span 2;
  }
}

.col-md-3 {
  @include mq(medium) {
    grid-column: auto/span 3;
  }
}

.col-md-4 {
  @include mq(medium) {
    grid-column: auto/span 4;
  }
}

.col-md-5 {
  @include mq(medium) {
    grid-column: auto/span 5;
  }
}

.col-md-6 {
  @include mq(medium) {
    grid-column: auto/span 6;
  }
}

.col-md-7 {
  @include mq(medium) {
    grid-column: auto/span 7;
  }
}

.col-md-8 {
  @include mq(medium) {
    grid-column: auto/span 8;
  }
}

.col-md-9 {
  @include mq(medium) {
    grid-column: auto/span 9;
  }
}

.col-md-10 {
  @include mq(medium) {
    grid-column: auto/span 10;
  }
}

.col-md-11 {
  @include mq(medium) {
    grid-column: auto/span 11;
  }
}

.col-md-12 {
  @include mq(medium) {
    grid-column: auto/span 12;
  }
}



/* spanning rows , complete values missing*/

.row-2 {
  grid-row: auto/span 2;
}

/* Flex helpers */
.flex {
  display: flex;
}

.justify-end {
  justify-content: flex-end;
}

.justify-start {
  justify-content: flex-start;
}

.align-start {
  align-items: flex-start;
}

.align-end {
  align-items: flex-end;
}

.align-center {
  align-items: center;
}


/* Display Helpers*/
.sm-hidden{
  display: none;
  @include mq(medium){
    display: block;
  }
}

.md-hidden{
  display: block !important;
  @include mq(medium){
    display: none !important;
  }
}



/* Text Helpers */
.text-sm {
  font-size: map-get($map: $fontSizes, $key: "text-3xs");
}

.line-height-sm {
  line-height: 90%;
}